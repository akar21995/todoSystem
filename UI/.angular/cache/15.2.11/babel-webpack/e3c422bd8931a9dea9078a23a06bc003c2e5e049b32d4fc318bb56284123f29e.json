{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/todo-list/todo-list.component.ts\nimport { Component } from '@angular/core';\nimport { map } from 'rxjs';\nimport { TaskStatusList } from '../utils/general.config';\n// import { saveAs } from 'file-saver';\n// import * as Papa from 'papaparse';\nlet TodoListComponent = class TodoListComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.newTodoTitle = '';\n    this.statusList = TaskStatusList;\n  }\n  ngOnInit() {\n    this.todos = this.todoService.getTodos().pipe(map(res => {\n      if (res) {\n        console.log(res);\n        return res.taskList;\n      }\n    }));\n  }\n  addTodo() {\n    // const newTodo: Todo = {\n    //   id: Date.now(),\n    //   title: this.newTodoTitle,\n    //   status: 'pending'\n    // };\n    // this.todoService.addTodo(newTodo);\n    // this.newTodoTitle = '';\n  }\n  updateTodo(todo) {\n    this.todoService.updateTodo(todo);\n  }\n  deleteTodo(id) {\n    this.todoService.deleteTodo(id);\n  }\n  uploadCSV(event) {\n    const file = event.target.files[0];\n    // Papa.parse(file, {\n    //   complete: (result) => {\n    //     const todos: Todo[] = result.data.map((item: any, index: number) => ({\n    //       id: index,\n    //       title: item[0],\n    //       status: item[1]\n    //     }));\n    //     this.todoService.setTodosFromCSV(todos);\n    //   }\n    // });\n  }\n\n  downloadCSV() {\n    // const todos = this.todoService.getTodosAsCSV();\n    // const csv = Papa.unparse(todos);\n    // const blob = new Blob([csv], { type: 'text/csv' });\n    // saveAs(blob, 'todos.csv');\n  }\n};\nTodoListComponent = __decorate([Component({\n  selector: 'app-todo-list',\n  templateUrl: './task-list.component.html'\n})], TodoListComponent);\nexport { TodoListComponent };","map":{"version":3,"mappings":";AAAA;AACA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAqBC,GAAG,QAAc,MAAM;AAC5C,SAAqBC,cAAc,QAAQ,yBAAyB;AACpE;AACA;AAMO,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAJ/B,iBAAY,GAAG,EAAE;IAEjB,eAAU,GAAaH,cAAc;EAEU;EAE/CI,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE,CAACC,IAAI,CAC3CR,GAAG,CAAES,GAAQ,IAAI;MACf,IAAGA,GAAG,EAAE;QACNC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,OAAOA,GAAG,CAACG,QAAQ;;IAEvB,CAAC,CAAC,CACH;EACH;EAEAC,OAAO;IACL;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAGFC,UAAU,CAACC,IAAU;IACnB,IAAI,CAACX,WAAW,CAACU,UAAU,CAACC,IAAI,CAAC;EACnC;EAEAC,UAAU,CAACC,EAAU;IACnB,IAAI,CAACb,WAAW,CAACY,UAAU,CAACC,EAAE,CAAC;EACjC;EAEAC,SAAS,CAACC,KAAU;IAClB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAEAC,WAAW;IACT;IACA;IACA;IACA;EAAA;CAEH;AAzDYrB,iBAAiB,eAJ7BH,SAAS,CAAC;EACTyB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE;CACd,CAAC,GACWvB,iBAAiB,CAyD7B;SAzDYA,iBAAiB","names":["Component","map","TaskStatusList","TodoListComponent","constructor","todoService","ngOnInit","todos","getTodos","pipe","res","console","log","taskList","addTodo","updateTodo","todo","deleteTodo","id","uploadCSV","event","file","target","files","downloadCSV","selector","templateUrl"],"sourceRoot":"","sources":["D:\\Test\\todo-list\\UI\\src\\app\\tasks-list\\task-list.component.ts"],"sourcesContent":["// src/app/todo-list/todo-list.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TodoService, Todo } from '../_service/todo.service';\r\nimport { Observable, map, pipe } from 'rxjs';\r\nimport { TaskStatus, TaskStatusList } from '../utils/general.config';\r\n// import { saveAs } from 'file-saver';\r\n// import * as Papa from 'papaparse';\r\n\r\n@Component({\r\n  selector: 'app-todo-list',\r\n  templateUrl: './task-list.component.html'\r\n})\r\nexport class TodoListComponent implements OnInit {\r\n  todos: Observable<Todo[]> | undefined;\r\n  newTodoTitle = '';\r\n\r\n  statusList: string[] = TaskStatusList;\r\n\r\n  constructor(private todoService: TodoService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.todos = this.todoService.getTodos().pipe(\r\n      map((res: any) => {\r\n        if(res) {\r\n          console.log(res);\r\n          return res.taskList;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  addTodo() {\r\n    // const newTodo: Todo = {\r\n    //   id: Date.now(),\r\n    //   title: this.newTodoTitle,\r\n    //   status: 'pending'\r\n    // };\r\n    // this.todoService.addTodo(newTodo);\r\n    // this.newTodoTitle = '';\r\n  }\r\n\r\n  updateTodo(todo: Todo) {\r\n    this.todoService.updateTodo(todo);\r\n  }\r\n\r\n  deleteTodo(id: number) {\r\n    this.todoService.deleteTodo(id);\r\n  }\r\n\r\n  uploadCSV(event: any) {\r\n    const file = event.target.files[0];\r\n    // Papa.parse(file, {\r\n    //   complete: (result) => {\r\n    //     const todos: Todo[] = result.data.map((item: any, index: number) => ({\r\n    //       id: index,\r\n    //       title: item[0],\r\n    //       status: item[1]\r\n    //     }));\r\n    //     this.todoService.setTodosFromCSV(todos);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  downloadCSV() {\r\n    // const todos = this.todoService.getTodosAsCSV();\r\n    // const csv = Papa.unparse(todos);\r\n    // const blob = new Blob([csv], { type: 'text/csv' });\r\n    // saveAs(blob, 'todos.csv');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}