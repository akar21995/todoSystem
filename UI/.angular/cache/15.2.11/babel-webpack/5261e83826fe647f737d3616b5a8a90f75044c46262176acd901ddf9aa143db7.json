{"ast":null,"code":"import { map } from 'rxjs';\nimport { TaskStatusList } from '../utils/general.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_service/todo.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TodoListComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", s_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", s_r2, \" \");\n  }\n}\nfunction TodoListComponent_li_14_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", s_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", s_r5, \" \");\n  }\n}\nfunction TodoListComponent_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 7)(1, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function TodoListComponent_li_14_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const todo_r3 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(todo_r3.taskId = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function TodoListComponent_li_14_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const todo_r3 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(todo_r3.title = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function TodoListComponent_li_14_Template_select_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const todo_r3 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(todo_r3.status = $event);\n    });\n    i0.ɵɵtemplate(4, TodoListComponent_li_14_option_4_Template, 2, 2, \"option\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function TodoListComponent_li_14_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const todo_r3 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateTodo(todo_r3));\n    });\n    i0.ɵɵtext(6, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function TodoListComponent_li_14_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const todo_r3 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.deleteTodo(todo_r3.taskId));\n    });\n    i0.ɵɵtext(8, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const todo_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", todo_r3.taskId)(\"disabled\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", todo_r3.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", todo_r3.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.statusList);\n  }\n}\n// import { saveAs } from 'file-saver';\n// import * as Papa from 'papaparse';\nexport class TodoListComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.newTodoTitle = '';\n    this.statusList = TaskStatusList;\n    this.StatusFilter = \"\";\n  }\n  ngOnInit() {\n    this.getAllToDos();\n  }\n  getAllToDos() {\n    this.todos = this.todoService.getTodos().pipe(map(res => {\n      if (res) {\n        console.log(res);\n        return res.taskList;\n      }\n    }));\n  }\n  statusFilter(event) {\n    console.log(event.target.value);\n    this.todos = this.todoService.statusFilterTodos(event.target.value).pipe(map(res => {\n      if (res) {\n        console.log(res);\n        return res.taskList;\n      }\n    }));\n  }\n  addTodo() {\n    // const newTodo: Todo = {\n    //   id: Date.now(),\n    //   title: this.newTodoTitle,\n    //   status: 'pending'\n    // };\n    // this.todoService.addTodo(newTodo);\n    // this.newTodoTitle = '';\n  }\n  updateTodo(todo) {\n    this.todoService.updateTodo(todo);\n  }\n  deleteTodo(id) {\n    this.todoService.deleteTodo(id);\n  }\n  uploadCSV(event) {\n    const file = event.target.files[0];\n    // Papa.parse(file, {\n    //   complete: (result) => {\n    //     const todos: Todo[] = result.data.map((item: any, index: number) => ({\n    //       id: index,\n    //       title: item[0],\n    //       status: item[1]\n    //     }));\n    //     this.todoService.setTodosFromCSV(todos);\n    //   }\n    // });\n  }\n\n  downloadCSV() {\n    // const todos = this.todoService.getTodosAsCSV();\n    // const csv = Papa.unparse(todos);\n    // const blob = new Blob([csv], { type: 'text/csv' });\n    // saveAs(blob, 'todos.csv');\n  }\n  static #_ = this.ɵfac = function TodoListComponent_Factory(t) {\n    return new (t || TodoListComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoListComponent,\n    selectors: [[\"app-todo-list\"]],\n    decls: 16,\n    vars: 6,\n    consts: [[\"placeholder\", \"New Todo\", 1, \"display\", 3, \"ngModel\", \"ngModelChange\"], [1, \"display\", 3, \"click\"], [\"type\", \"file\", 1, \"display\", 3, \"change\"], [1, \"display\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"display\", 4, \"ngFor\", \"ngForOf\"], [1, \"display\"], [1, \"display\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [1, \"display\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function TodoListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n        i0.ɵɵtext(2, \"Todo List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TodoListComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.newTodoTitle = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function TodoListComponent_Template_button_click_4_listener() {\n          return ctx.addTodo();\n        });\n        i0.ɵɵtext(5, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"change\", function TodoListComponent_Template_input_change_6_listener($event) {\n          return ctx.uploadCSV($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function TodoListComponent_Template_button_click_7_listener() {\n          return ctx.downloadCSV();\n        });\n        i0.ɵɵtext(8, \"Download CSV\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function TodoListComponent_Template_select_ngModelChange_9_listener($event) {\n          return ctx.StatusFilter = $event;\n        })(\"change\", function TodoListComponent_Template_select_change_9_listener($event) {\n          return ctx.statusFilter($event);\n        });\n        i0.ɵɵelementStart(10, \"option\", 4);\n        i0.ɵɵtext(11, \" All Selected \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, TodoListComponent_option_12_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ul\");\n        i0.ɵɵtemplate(14, TodoListComponent_li_14_Template, 9, 5, \"li\", 6);\n        i0.ɵɵpipe(15, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTodoTitle);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.StatusFilter);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.statusList);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(15, 4, ctx.todos));\n      }\n    },\n    dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i2.AsyncPipe],\n    styles: [\".display[_ngcontent-%COMP%] {\\r\\n  margin: 15px;\\r\\n  padding: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MtbGlzdC90YXNrLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixZQUFZO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIuZGlzcGxheSB7XHJcbiAgbWFyZ2luOiAxNXB4O1xyXG4gIHBhZGRpbmc6IDVweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["map","TaskStatusList","i0","TodoListComponent","constructor","todoService","ngOnInit","getAllToDos","todos","getTodos","pipe","res","console","log","taskList","statusFilter","event","target","value","statusFilterTodos","addTodo","updateTodo","todo","deleteTodo","id","uploadCSV","file","files","downloadCSV","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Test\\todo-list\\UI\\src\\app\\tasks-list\\task-list.component.ts","D:\\Test\\todo-list\\UI\\src\\app\\tasks-list\\task-list.component.html"],"sourcesContent":["// src/app/todo-list/todo-list.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TodoService, Todo } from '../_service/todo.service';\r\nimport { Observable, map, pipe } from 'rxjs';\r\nimport { TaskStatus, TaskStatusList } from '../utils/general.config';\r\n// import { saveAs } from 'file-saver';\r\n// import * as Papa from 'papaparse';\r\n\r\n@Component({\r\n  selector: 'app-todo-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.css']\r\n})\r\nexport class TodoListComponent implements OnInit {\r\n  todos: Observable<Todo[]> | undefined;\r\n  newTodoTitle = '';\r\n\r\n  statusList: string[] = TaskStatusList;\r\n  StatusFilter: string = \"\";\r\n\r\n  constructor(private todoService: TodoService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllToDos();\r\n  }\r\n\r\n  getAllToDos() {\r\n    this.todos = this.todoService.getTodos().pipe(\r\n      map((res: any) => {\r\n        if(res) {\r\n          console.log(res);\r\n          return res.taskList;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  statusFilter(event: any) {\r\n    console.log(event.target.value);\r\n\r\n    this.todos = this.todoService.statusFilterTodos(event.target.value).pipe(\r\n      map((res: any) => {\r\n        if(res) {\r\n          console.log(res);\r\n          return res.taskList;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  addTodo() {\r\n    // const newTodo: Todo = {\r\n    //   id: Date.now(),\r\n    //   title: this.newTodoTitle,\r\n    //   status: 'pending'\r\n    // };\r\n    // this.todoService.addTodo(newTodo);\r\n    // this.newTodoTitle = '';\r\n  }\r\n\r\n  updateTodo(todo: Todo) {\r\n    this.todoService.updateTodo(todo);\r\n  }\r\n\r\n  deleteTodo(id: number) {\r\n    this.todoService.deleteTodo(id);\r\n  }\r\n\r\n  uploadCSV(event: any) {\r\n    const file = event.target.files[0];\r\n    // Papa.parse(file, {\r\n    //   complete: (result) => {\r\n    //     const todos: Todo[] = result.data.map((item: any, index: number) => ({\r\n    //       id: index,\r\n    //       title: item[0],\r\n    //       status: item[1]\r\n    //     }));\r\n    //     this.todoService.setTodosFromCSV(todos);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  downloadCSV() {\r\n    // const todos = this.todoService.getTodosAsCSV();\r\n    // const csv = Papa.unparse(todos);\r\n    // const blob = new Blob([csv], { type: 'text/csv' });\r\n    // saveAs(blob, 'todos.csv');\r\n  }\r\n}\r\n","<!-- src/app/todo-list/todo-list.component.html -->\r\n<div>\r\n  <h1>Todo List</h1>\r\n  <input [(ngModel)]=\"newTodoTitle\" placeholder=\"New Todo\" class=\"display\">\r\n  <button (click)=\"addTodo()\" class=\"display\">Add</button>\r\n  <input type=\"file\" (change)=\"uploadCSV($event)\" class=\"display\">\r\n  <button (click)=\"downloadCSV()\" class=\"display\">Download CSV</button>\r\n\r\n  <select [(ngModel)]=\"StatusFilter\" class=\"display\" (change)=\"statusFilter($event)\">\r\n    <option [value]=\"\"> All Selected </option>\r\n    <option *ngFor=\"let s of statusList\" [value]=\"s\"> {{ s }} </option>\r\n  </select>\r\n\r\n  <ul>\r\n    <li *ngFor=\"let todo of todos | async\" class=\"display\">\r\n      <input [(ngModel)]=\"todo.taskId\" [disabled]=\"true\" class=\"display\">\r\n      <input [(ngModel)]=\"todo.title\" class=\"display\">\r\n      <select [(ngModel)]=\"todo.status\" class=\"display\">\r\n        <option *ngFor=\"let s of statusList\" [value]=\"s\"> {{ s }} </option>\r\n      </select>\r\n      <button (click)=\"updateTodo(todo)\" class=\"display\">Update</button>\r\n      <button (click)=\"deleteTodo(todo.taskId)\" class=\"display\">Delete</button>\r\n    </li>\r\n  </ul>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}