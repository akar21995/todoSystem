{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class TodoService {\n  constructor() {\n    this.todos = [];\n    this.todosSubject = new BehaviorSubject(this.todos);\n  }\n  getTodos() {\n    return this.todosSubject.asObservable();\n  }\n  addTodo(todo) {\n    this.todos.push(todo);\n    this.todosSubject.next(this.todos);\n  }\n  updateTodo(updatedTodo) {\n    const index = this.todos.findIndex(todo => todo.id === updatedTodo.id);\n    if (index !== -1) {\n      this.todos[index] = updatedTodo;\n      this.todosSubject.next(this.todos);\n    }\n  }\n  deleteTodo(id) {\n    this.todos = this.todos.filter(todo => todo.id !== id);\n    this.todosSubject.next(this.todos);\n  }\n  setTodosFromCSV(todos) {\n    this.todos = todos;\n    this.todosSubject.next(this.todos);\n  }\n  getTodosAsCSV() {\n    return this.todos;\n  }\n  static #_ = this.ɵfac = function TodoService_Factory(t) {\n    return new (t || TodoService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoService,\n    factory: TodoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;AAWtC,OAAM,MAAOC,WAAW;EAHxBC;IAIU,UAAK,GAAW,EAAE;IAClB,iBAAY,GAAG,IAAIF,eAAe,CAAS,IAAI,CAACG,KAAK,CAAC;;EAE9DC,QAAQ;IACN,OAAO,IAAI,CAACC,YAAY,CAACC,YAAY,EAAE;EACzC;EAEAC,OAAO,CAACC,IAAU;IAChB,IAAI,CAACL,KAAK,CAACM,IAAI,CAACD,IAAI,CAAC;IACrB,IAAI,CAACH,YAAY,CAACK,IAAI,CAAC,IAAI,CAACP,KAAK,CAAC;EACpC;EAEAQ,UAAU,CAACC,WAAiB;IAC1B,MAAMC,KAAK,GAAG,IAAI,CAACV,KAAK,CAACW,SAAS,CAACN,IAAI,IAAIA,IAAI,CAACO,EAAE,KAAKH,WAAW,CAACG,EAAE,CAAC;IACtE,IAAIF,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACV,KAAK,CAACU,KAAK,CAAC,GAAGD,WAAW;MAC/B,IAAI,CAACP,YAAY,CAACK,IAAI,CAAC,IAAI,CAACP,KAAK,CAAC;;EAEtC;EAEAa,UAAU,CAACD,EAAU;IACnB,IAAI,CAACZ,KAAK,GAAG,IAAI,CAACA,KAAK,CAACc,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACO,EAAE,KAAKA,EAAE,CAAC;IACtD,IAAI,CAACV,YAAY,CAACK,IAAI,CAAC,IAAI,CAACP,KAAK,CAAC;EACpC;EAEAe,eAAe,CAACf,KAAa;IAC3B,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,YAAY,CAACK,IAAI,CAAC,IAAI,CAACP,KAAK,CAAC;EACpC;EAEAgB,aAAa;IACX,OAAO,IAAI,CAAChB,KAAK;EACnB;EAAC;qBAjCUF,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAmB,SAAXnB,WAAW;IAAAoB,YAFV;EAAM","names":["BehaviorSubject","TodoService","constructor","todos","getTodos","todosSubject","asObservable","addTodo","todo","push","next","updateTodo","updatedTodo","index","findIndex","id","deleteTodo","filter","setTodosFromCSV","getTodosAsCSV","factory","providedIn"],"sourceRoot":"","sources":["D:\\Test\\todo-list\\UI\\src\\app\\_service\\todo.service.ts"],"sourcesContent":["// src/app/todo.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Todo {\r\n  id: number;\r\n  title: string;\r\n  status: 'pending' | 'completed';\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoService {\r\n  private todos: Todo[] = [];\r\n  private todosSubject = new BehaviorSubject<Todo[]>(this.todos);\r\n\r\n  getTodos() {\r\n    return this.todosSubject.asObservable();\r\n  }\r\n\r\n  addTodo(todo: Todo) {\r\n    this.todos.push(todo);\r\n    this.todosSubject.next(this.todos);\r\n  }\r\n\r\n  updateTodo(updatedTodo: Todo) {\r\n    const index = this.todos.findIndex(todo => todo.id === updatedTodo.id);\r\n    if (index !== -1) {\r\n      this.todos[index] = updatedTodo;\r\n      this.todosSubject.next(this.todos);\r\n    }\r\n  }\r\n\r\n  deleteTodo(id: number) {\r\n    this.todos = this.todos.filter(todo => todo.id !== id);\r\n    this.todosSubject.next(this.todos);\r\n  }\r\n\r\n  setTodosFromCSV(todos: Todo[]) {\r\n    this.todos = todos;\r\n    this.todosSubject.next(this.todos);\r\n  }\r\n\r\n  getTodosAsCSV() {\r\n    return this.todos;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}