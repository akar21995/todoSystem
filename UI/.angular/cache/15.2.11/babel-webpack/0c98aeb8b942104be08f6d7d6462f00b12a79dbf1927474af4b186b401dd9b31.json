{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoService {\n  constructor(http) {\n    this.http = http;\n    this.todos = [];\n    this.todosSubject = new BehaviorSubject(this.todos);\n    this.apiUrl = \"http://localhost:3000\";\n  }\n  getTodos() {\n    return this.http.get(`${this.apiUrl}/private/api/task`);\n  }\n  statusFilterTodos(status) {\n    return this.http.get(`${this.apiUrl}/private/api/task/taskList/filter?status=${status}`);\n  }\n  getIdFilterTodo(id) {\n    return this.http.get(`${this.apiUrl}/private/api/task/${id}`);\n  }\n  addTodo(todo) {\n    return this.http.post(`${this.apiUrl}/private/api/task/create`, todo);\n  }\n  updateTodo(id, updatedTodo) {\n    return this.http.put(`${this.apiUrl}/private/api/task/${id}`, updatedTodo);\n  }\n  deleteTodo(id) {\n    return this.http.delete(`${this.apiUrl}/private/api/task/${id}`);\n  }\n  setTodosFromCSV(todos) {\n    this.todos = todos;\n    this.todosSubject.next(this.todos);\n  }\n  getTodosAsCSV(data) {\n    return this.http.post(`${this.apiUrl}/private/api/csv/download`, data);\n  }\n  static #_ = this.ɵfac = function TodoService_Factory(t) {\n    return new (t || TodoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoService,\n    factory: TodoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;;AAYtC,OAAM,MAAOC,WAAW;EAMtBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANN,UAAK,GAAW,EAAE;IAClB,iBAAY,GAAG,IAAIH,eAAe,CAAS,IAAI,CAACI,KAAK,CAAC;IAEtD,WAAM,GAAG,uBAAuB;EAIrC;EAEHC,QAAQ;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,mBAAmB,CAAC;EACzD;EAEAC,iBAAiB,CAACC,MAAc;IAC9B,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,4CAA4CE,MAAM,EAAE,CAAC;EAC1F;EAEAC,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,qBAAqBI,EAAE,EAAE,CAAC;EAC/D;EAEAC,OAAO,CAACC,IAAS;IACf,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,0BAA0B,EAAEM,IAAI,CAAC;EACvE;EAEAE,UAAU,CAACJ,EAAmB,EAAEK,WAAiB;IAC/C,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,GAAG,IAAI,CAACV,MAAM,qBAAqBI,EAAE,EAAE,EAAEK,WAAW,CAAC;EAC5E;EAEAE,UAAU,CAACP,EAAmB;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACgB,MAAM,CAAC,GAAG,IAAI,CAACZ,MAAM,qBAAqBI,EAAE,EAAE,CAAC;EAClE;EAEAS,eAAe,CAAChB,KAAa;IAC3B,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACiB,YAAY,CAACC,IAAI,CAAC,IAAI,CAAClB,KAAK,CAAC;EACpC;EAEAmB,aAAa,CAACC,IAAS;IACrB,OAAO,IAAI,CAACrB,IAAI,CAACW,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,2BAA2B,EAAEiB,IAAI,CAAC;EACxE;EAAC;qBAzCUvB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAwB,SAAXxB,WAAW;IAAAyB,YAFV;EAAM","names":["BehaviorSubject","TodoService","constructor","http","todos","getTodos","get","apiUrl","statusFilterTodos","status","getIdFilterTodo","id","addTodo","todo","post","updateTodo","updatedTodo","put","deleteTodo","delete","setTodosFromCSV","todosSubject","next","getTodosAsCSV","data","factory","providedIn"],"sourceRoot":"","sources":["D:\\Test\\todo-list\\UI\\src\\app\\_service\\todo.service.ts"],"sourcesContent":["// src/app/todo.service.ts\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Todo {\r\n  taskId: number;\r\n  title: string;\r\n  description: string;\r\n  status: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoService {\r\n  private todos: Todo[] = [];\r\n  private todosSubject = new BehaviorSubject<Todo[]>(this.todos);\r\n\r\n  private apiUrl = \"http://localhost:3000\";\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  getTodos() {\r\n    return this.http.get(`${this.apiUrl}/private/api/task`);\r\n  }\r\n\r\n  statusFilterTodos(status: string) {\r\n    return this.http.get(`${this.apiUrl}/private/api/task/taskList/filter?status=${status}`);\r\n  }\r\n\r\n  getIdFilterTodo(id: string) {\r\n    return this.http.get(`${this.apiUrl}/private/api/task/${id}`);\r\n  }\r\n\r\n  addTodo(todo: any) {\r\n    return this.http.post(`${this.apiUrl}/private/api/task/create`, todo);\r\n  }\r\n\r\n  updateTodo(id: string | number, updatedTodo: Todo) {\r\n    return this.http.put(`${this.apiUrl}/private/api/task/${id}`, updatedTodo);\r\n  }\r\n\r\n  deleteTodo(id: string | number) {\r\n    return this.http.delete(`${this.apiUrl}/private/api/task/${id}`);\r\n  }\r\n\r\n  setTodosFromCSV(todos: Todo[]) {\r\n    this.todos = todos;\r\n    this.todosSubject.next(this.todos);\r\n  }\r\n\r\n  getTodosAsCSV(data: any) {\r\n    return this.http.post(`${this.apiUrl}/private/api/csv/download`, data);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}